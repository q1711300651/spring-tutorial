<http/>

Родительский элемент для всех web конфигураций Spring Security
------------------------------------------------------------------------------------------------------------------------

<intercept-url/>
    Правило для перехвата урл запросов. Поддерживаеться множество обьявлений, порядок которых зависи от места обьявление
    чем выше тем более приоритетние.
    Параметры:
        1.pattern - опредляет паттерн для перехвата урл запроса ( ant стиль поттерна )
            Примеры:
                pattern="/**" - все запросы
                pattern="/security/*/hello" - запросы с началом /security потом любая строка в конце /hello
        2.access - определяет требования доступа к указанному урлу (По умолчанию это просто разделенный
                   запятой список досутпных ролей)
        3.method - укзать спецефичный метод(PUT, POST, GET ect.) запроса что нужно перехватить

    Если использовать паттерн "/**" то нужно учесть что страница авторизации ДОЛЖНА быть доступной для не
    зарегестрированного пользователя. т.е нужно указать дополнительное правило выше обычного:

        <intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>

        IS_AUTHENTICATED_ANONYMOUSLY - для не зарегестрировнных пользователей

------------------------------------------------------------------------------------------------------------------------

<form-login />
     Выполнение редиректа на форму авторизации

     Параметры:
        login-page - урл на страницуц с формой авторизации
        default-target-url - указать урл куда поподет пользователь после авторизации
        always-use-default-target - всегда переводить пользователя на страницу по умолчанию
        authentication-success-handler-ref - альтернатива к default-target-url, использует обьект
                                             AuthenticationSuccessHandler для обрабокти усешной авторизации

------------------------------------------------------------------------------------------------------------------------
<http-basic />
      Авторизация пользователя базовым аторизационным способом.

      Пример:
          <http>
              <intercept-url pattern="/**" access="authenticated"/>
              <form-login />
              <http-basic />
          </http>

------------------------------------------------------------------------------------------------------------------------

<authentication-manager/>
    Менеджер регестрирует провайдеров аутентификации.

------------------------------------------------------------------------------------------------------------------------

<authentication-provider/>
    Елеметны создает DaoAuthenticationProvider бин

    Параметры:
        user-service-ref - ссылка на собственный UserDetailsService(обработчик результатов авторизации)


------------------------------------------------------------------------------------------------------------------------

<user-service/>
    Елеметны создает InMemoryDaoImpl бин. Простой способ зарегестрировать пользователей в системе

    дочерниый элемент:

    <user/> - указывает на пользователья в системя Spring Security
        Параметры:
        name - идентификатор пользователя
        password -пароль
        authorities - список ролей привязанных к пользователю
            Пример:
                authorities="ROLE_USER, ROLE_ADMIN"

------------------------------------------------------------------------------------------------------------------------

<jdbc-user-service/>
    Сервис предостовляемый Spring Security для обработки запросов через бд.

    Параметры:
        data-source-ref - ссылка на DataSource