HyperSQL


    create table acl_sid(
     id bigint generated by default as identity(start with 100) not null primary key,
     principal boolean not null,
     sid varchar_ignorecase(100) not null,
     constraint unique_uk_1 unique(sid,principal)
    );
    create table acl_class(
     id bigint generated by default as identity(start with 100) not null primary key,
     class varchar_ignorecase(100) not null,
     constraint unique_uk_2 unique(class)
    );
    create table acl_object_identity(
     id bigint generated by default as identity(start with 100) not null primary key,
     object_id_class bigint not null,
     object_id_identity bigint not null,
     parent_object bigint,
     owner_sid bigint,
     entries_inheriting boolean not null,
     constraint unique_uk_3 unique(object_id_class,object_id_identity),
     constraint foreign_fk_1 foreign key(parent_object)references acl_object_identity(id),
     constraint foreign_fk_2 foreign key(object_id_class)references acl_class(id),
     constraint foreign_fk_3 foreign key(owner_sid)references acl_sid(id)
    );
    create table acl_entry(
     id bigint generated by default as identity(start with 100) not null primary key,
     acl_object_identity bigint not null,
     ace_order int not null,
     sid bigint not null,
     mask integer not null,
     granting boolean not null,
     audit_success boolean not null,
     audit_failure boolean not null,
     constraint unique_uk_4 unique(acl_object_identity,ace_order),
     constraint foreign_fk_4 foreign key(acl_object_identity) references acl_object_identity(id),
     constraint foreign_fk_5 foreign key(sid) references acl_sid(id)
    );


PostgreSQL

    create table acl_sid(
     id bigserial not null primary key,
     principal boolean not null,
     sid varchar(100) not null,
     constraint unique_uk_1 unique(sid,principal)
    );
    create table acl_class(
     id bigserial not null primary key,
     class varchar(100) not null,
     constraint unique_uk_2 unique(class)
    );
    create table acl_object_identity(
     id bigserial primary key,
     object_id_class bigint not null,
     object_id_identity bigint not null,
     parent_object bigint,
     owner_sid bigint,
     entries_inheriting boolean not null,
     constraint unique_uk_3 unique(object_id_class,object_id_identity),
     constraint foreign_fk_1 foreign key(parent_object)references acl_object_identity(id),
     constraint foreign_fk_2 foreign key(object_id_class)references acl_class(id),
     constraint foreign_fk_3 foreign key(owner_sid)references acl_sid(id)
    );
    create table acl_entry(
     id bigserial primary key,
     acl_object_identity bigint not null,
     ace_order int not null,
     sid bigint not null,
     mask integer not null,
     granting boolean not null,
     audit_success boolean not null,
     audit_failure boolean not null,
     constraint unique_uk_4 unique(acl_object_identity,ace_order),
     constraint foreign_fk_4 foreign key(acl_object_identity) references acl_object_identity(id),
     constraint foreign_fk_5 foreign key(sid) references acl_sid(id)
    );

You  will  have  to  set  the  classIdentityQuery  and  sidIdentityQuery  properties  of
JdbcMutableAclService to the following values, respectively:
• select currval(pg_get_serial_sequence('acl_class', 'id'))
• select currval(pg_get_serial_sequence('acl_sid', 'id'))

MySQL and MariaDB

    CREATE TABLE acl_sid (
     id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     principal BOOLEAN NOT NULL,
     sid VARCHAR(100) NOT NULL,
     UNIQUE KEY unique_acl_sid (sid, principal)
    ) ENGINE=InnoDB;
    CREATE TABLE acl_class (
     id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     class VARCHAR(100) NOT NULL,
     UNIQUE KEY uk_acl_class (class)
    ) ENGINE=InnoDB;
    CREATE TABLE acl_object_identity (
     id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     object_id_class BIGINT UNSIGNED NOT NULL,
     object_id_identity BIGINT NOT NULL,
     parent_object BIGINT UNSIGNED,
     owner_sid BIGINT UNSIGNED,
     entries_inheriting BOOLEAN NOT NULL,
     UNIQUE KEY uk_acl_object_identity (object_id_class, object_id_identity),
     CONSTRAINT fk_acl_object_identity_parent FOREIGN KEY (parent_object) REFERENCES acl_object_identity
     (id),
     CONSTRAINT fk_acl_object_identity_class FOREIGN KEY (object_id_class) REFERENCES acl_class (id),
     CONSTRAINT fk_acl_object_identity_owner FOREIGN KEY (owner_sid) REFERENCES acl_sid (id)
    ) ENGINE=InnoDB;
    CREATE TABLE acl_entry (
     id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     acl_object_identity BIGINT UNSIGNED NOT NULL,
     ace_order INTEGER NOT NULL,
     sid BIGINT UNSIGNED NOT NULL,
     mask INTEGER UNSIGNED NOT NULL,
     granting BOOLEAN NOT NULL,
     audit_success BOOLEAN NOT NULL,
     audit_failure BOOLEAN NOT NULL,
     UNIQUE KEY unique_acl_entry (acl_object_identity, ace_order),
     CONSTRAINT fk_acl_entry_object FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity (id),
     CONSTRAINT fk_acl_entry_acl FOREIGN KEY (sid) REFERENCES acl_sid (id)
    ) ENGINE=InnoDB;


Microsoft SQL Server


    CREATE TABLE acl_sid (
     id BIGINT NOT NULL IDENTITY PRIMARY KEY,
     principal BIT NOT NULL,
     sid VARCHAR(100) NOT NULL,
     CONSTRAINT unique_acl_sid UNIQUE (sid, principal)
    );
    CREATE TABLE acl_class (
     id BIGINT NOT NULL IDENTITY PRIMARY KEY,
     class VARCHAR(100) NOT NULL,
     CONSTRAINT uk_acl_class UNIQUE (class)
    );
    CREATE TABLE acl_object_identity (
     id BIGINT NOT NULL IDENTITY PRIMARY KEY,
     object_id_class BIGINT NOT NULL,
     object_id_identity BIGINT NOT NULL,
     parent_object BIGINT,
     owner_sid BIGINT,
     entries_inheriting BIT NOT NULL,
     CONSTRAINT uk_acl_object_identity UNIQUE (object_id_class, object_id_identity),
     CONSTRAINT fk_acl_object_identity_parent FOREIGN KEY (parent_object) REFERENCES acl_object_identity
     (id),
     CONSTRAINT fk_acl_object_identity_class FOREIGN KEY (object_id_class) REFERENCES acl_class (id),
     CONSTRAINT fk_acl_object_identity_owner FOREIGN KEY (owner_sid) REFERENCES acl_sid (id)
    );
    CREATE TABLE acl_entry (
     id BIGINT NOT NULL IDENTITY PRIMARY KEY,
     acl_object_identity BIGINT NOT NULL,
     ace_order INTEGER NOT NULL,
     sid BIGINT NOT NULL,
     mask INTEGER NOT NULL,
     granting BIT NOT NULL,
     audit_success BIT NOT NULL,
     audit_failure BIT NOT NULL,
     CONSTRAINT unique_acl_entry UNIQUE (acl_object_identity, ace_order),
     CONSTRAINT fk_acl_entry_object FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity (id),
     CONSTRAINT fk_acl_entry_acl FOREIGN KEY (sid) REFERENCES acl_sid (id)
    );


Oracle Database

    CREATE TABLE acl_sid (
     id NUMBER(38) NOT NULL PRIMARY KEY,
     principal NUMBER(1) NOT NULL CHECK (principal in (0, 1)),
     sid NVARCHAR2(100) NOT NULL,
     CONSTRAINT unique_acl_sid UNIQUE (sid, principal)
    );
    CREATE SEQUENCE acl_sid_sequence START WITH 1 INCREMENT BY 1 NOMAXVALUE;
    CREATE OR REPLACE TRIGGER acl_sid_id_trigger
     BEFORE INSERT ON acl_sid
     FOR EACH ROW
    BEGIN
     SELECT acl_sid_sequence.nextval INTO :new.id FROM dual;
    END;
    CREATE TABLE acl_class (
     id NUMBER(38) NOT NULL PRIMARY KEY,
     class NVARCHAR2(100) NOT NULL,
     CONSTRAINT uk_acl_class UNIQUE (class)
    );
    CREATE SEQUENCE acl_class_sequence START WITH 1 INCREMENT BY 1 NOMAXVALUE;
    CREATE OR REPLACE TRIGGER acl_class_id_trigger
     BEFORE INSERT ON acl_class
     FOR EACH ROW
    BEGIN
     SELECT acl_class_sequence.nextval INTO :new.id FROM dual;
    END;
    CREATE TABLE acl_object_identity (
     id NUMBER(38) NOT NULL PRIMARY KEY,
     object_id_class NUMBER(38) NOT NULL,
     object_id_identity NUMBER(38) NOT NULL,
     parent_object NUMBER(38),
     owner_sid NUMBER(38),
     entries_inheriting NUMBER(1) NOT NULL CHECK (entries_inheriting in (0, 1)),
     CONSTRAINT uk_acl_object_identity UNIQUE (object_id_class, object_id_identity),
     CONSTRAINT fk_acl_object_identity_parent FOREIGN KEY (parent_object) REFERENCES acl_object_identity
     (id),
     CONSTRAINT fk_acl_object_identity_class FOREIGN KEY (object_id_class) REFERENCES acl_class (id),
     CONSTRAINT fk_acl_object_identity_owner FOREIGN KEY (owner_sid) REFERENCES acl_sid (id)
    );
    CREATE SEQUENCE acl_object_identity_sequence START WITH 1 INCREMENT BY 1 NOMAXVALUE;
    CREATE OR REPLACE TRIGGER acl_object_identity_id_trigger
     BEFORE INSERT ON acl_object_identity
     FOR EACH ROW
    BEGIN
     SELECT acl_object_identity_sequence.nextval INTO :new.id FROM dual;
    END;
    CREATE TABLE acl_entry (
     id NUMBER(38) NOT NULL PRIMARY KEY,
     acl_object_identity NUMBER(38) NOT NULL,
     ace_order INTEGER NOT NULL,
     sid NUMBER(38) NOT NULL,
     mask INTEGER NOT NULL,
     granting NUMBER(1) NOT NULL CHECK (granting in (0, 1)),
     audit_success NUMBER(1) NOT NULL CHECK (audit_success in (0, 1)),
     audit_failure NUMBER(1) NOT NULL CHECK (audit_failure in (0, 1)),
     CONSTRAINT unique_acl_entry UNIQUE (acl_object_identity, ace_order),
     CONSTRAINT fk_acl_entry_object FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity (id),
     CONSTRAINT fk_acl_entry_acl FOREIGN KEY (sid) REFERENCES acl_sid (id)
    );
    CREATE SEQUENCE acl_entry_sequence START WITH 1 INCREMENT BY 1 NOMAXVALUE;
    CREATE OR REPLACE TRIGGER acl_entry_id_trigger
     BEFORE INSERT ON acl_entry
     FOR EACH ROW
    BEGIN
     SELECT acl_entry_sequence.nextval INTO :new.id FROM dual;
    END;
