Списко провайдеров аутентифиакции:

DaoAuthenticationProvider:

    Один из простых реализаций провайдера. Данные о пользователе
    получаються из userDetailsService и passwordEncoder для обработки хешированного пароля

    <bean id="daoAuthenticationProvider"
    class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="inMemoryDaoImpl"/>
        <property name="passwordEncoder" ref="passwordEncoder"/>
    </bean>

In-Memory Authentication:

    Провйдер, для быстрой интеграции Spring Security

    Spring Security config:

        <user-service id="userDetailsService">
            <user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
            <user name="bob" password="bobspassword" authorities="ROLE_USER" />
        </user-service>

    Или использовать properties:

        <user-service id="userDetailsService" properties="users.properties"/>

    users.properties:

        username=password,grantedAuthority[,grantedAuthority][,enabled|disabled]

JdbcDaoImpl:

    В случае если не использыеться ORM можно указать уже реализаовнный UserDetailsService для простой выгрзуки
    сохраненных пользователей системы из БД:


        bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
            <property name="url" value="jdbc:hsqldb:hsql://localhost:9001"/>
            <property name="username" value="sa"/>
            <property name="password" value=""/>
        </bean>

        <bean id="userDetailsService"
            class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
            <property name="dataSource" ref="dataSource"/>
        </bean>