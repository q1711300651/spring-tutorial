Data Access Object (DAO) - обьекты которые упрощают работу с доступом к базе используя технологии (JDBC, Hibernate,
JPA or JDO)


DAO JDBC

Реализация DAO на основе JDBC

    @Repository
    public class JdbcMovieFinder implements MovieFinder {

    private JdbcTemplate jdbcTemplate;

    @Autowired
    public void init(DataSource dataSource) {
        this.jdbcTemplate = new JdbcTemplate(dataSource);
    }


Пользьуйтесь только в тестовой среде DriverManagerDataSource, так как не предостволяет пула соединений, и имеет
низкую производительности при множественном запросе

Для реализации производственных задач используй библеотеки типа

    1. Jakarta Commons DBCP
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="${jdbc.driverClassName}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
        </bean>
        <context:property-placeholder location="jdbc.properties"/>

    2.C3P0
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
            <property name="driverClass" value="${jdbc.driverClassName}"/>
            <property name="jdbcUrl" value="${jdbc.url}"/>
            <property name="user" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
        </bean>
         <context:property-placeholder location="jdbc.properties"/>


DriverManagerDataSource

    Реализация dataSource, которая возвращает каждый раз новое соединение
    Полезна в stand-alone
