Компиляция SpEL, повзоляет оптимизировать многоразовые выражения.
По умолчанию вылюченно. Но существует два способа включить:
    1. Ндобавить в конфиг парсера, перечисление org.springframework.expression.spel.SpelCompilerMode

        SpelParserConfiguration config = new SpelParserConfiguration( SpelCompilerMode.IMMEDIATE, this.getClass().getClassLoader());
        SpelExpressionParser parser = new SpelExpressionParser(config);


        SpelCompilerMode:
            OFF - Комилятор выключен. Заданно по умолчанию
            IMMEDIATE - Выражение компилируеться, как можно раньше. Тоесть комиляция выполняеться после первого вызова
                        выражения, если скомпилированное выражение будет не удачным, то будет брошенно исключение
            MIXED - выражение переключаеться между компилировнным и интепретированным способом, после некоторых раз
                    выполнения, выражение компилируеться, и если скомпилированное выражение не удачно, выполняеться
                    интепритация.
        IMMEDIATE сиползуеться если нужно сообщить клиенту, что что-то пошло не так в выполнении выражения, а не тихо
        его интепритировать как в MIXED

        Если не указывать загрузчик классов, то береться по умолчанию загрузчик потока выполнения

    2. Второй способ это если SpEL являеться внутренней частю другого компонента, и нет возможности указать напрямую в
       парсер. Для этого указываеться в системной настройкой  spring.expression.compiler.mode = [off|immediate|mixed]

Ограничения
    Не могут быть скомпилированные следующие выражения:
        1.Выражение которые используют присвоение
        2.Выражение что работают со службами преобразования
        3.Выражения спользующие собственные методы доступа/изменения
        4  expressions using selection or projection