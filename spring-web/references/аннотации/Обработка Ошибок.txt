@ExceptionHandler
    Интерфейс HandlerExceptionResolver и SimpleMappingExceptionResolver позволяют преобразовывать Исключение в
    соотвестующие представление + с доп. логика



    @Controller
    public class SimpleController {

        // @RequestMapping методы ...

        @ExceptionHandler(IOException.class) // может быть массивом доступных значений
        public ResponseEntity<String> handleIOException(IOException ex) {

            // Вернуть подготовленную сущность

            return responseEntity;
        }
    }


Обработка стандартных Spring MVC Exceptions


BindException - 400 (Bad Request)
TypeMismatchException  - 400 (Bad Request)
MethodArgumentNotValidException - 400 (Bad Request)
MissingServletRequestParameterException - 400 (Bad Request)
MissingServletRequestPartException - 400 (Bad Request)

HttpMessageNotReadableException - 400 (Bad Request)
NoHandlerFoundException  - 404 (Not Found)
NoSuchRequestHandlingMethodException - 404 (Not Found)
HttpRequestMethodNotSupportedException - 405 (Method Not Allowed)
HttpMediaTypeNotAcceptableException - 406 (Not Acceptable)ъ
HttpMediaTypeNotSupportedException - 415 (Unsupported Media Type)
ConversionNotSupportedException - 500 (Internal Server Error)
HttpMessageNotWritableException - 500 (Internal Server Error)



@ResponseStatus

    Аннотация для описпние статуса в бизнес исключений